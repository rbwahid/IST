@model IST.Web.Models.TicketAssignModel

@{
    ViewBag.Title = "Ticket Assign";
}


<!-- Content area -->
<div class="content">

    <!-- Basic layout-->
    <div class="card border-teal">
        <div class="card-header header-elements-inline bg-teal">
            <h5 class="card-title"><strong>Ticket Assign</strong></h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a href="@Url.Action("Index","Property")" class="list-icons-item"><i class="icon-arrow-left52"></i></a>
                </div>
            </div>
        </div>
        @*<hr class="hr-mar-reduce" />*@
        @using (Html.BeginForm("Add", "TicketAssign", FormMethod.Post, new { enctype = "multipart/form-data", @class = "propertyCreateForm" }))
        {
            @Html.AntiForgeryToken()
            <div class="card-body">

                @*<div class="row">
                        <div class="col-md-12">
                            <div class="form-group row">
                                <div class="col-lg-12">
                                    <input type="file" id="ImageFileBase" name="ImageFileBases" class="file-input" multiple="multiple" accept="image/*" data-browse-class="btn btn-primary btn-block" data-show-remove="false" data-show-caption="false" data-show-upload="false" data-fouc>
                                </div>
                            </div>
                        </div>
                    </div>*@

                <div class="row">

                    <div class="col-md-6">

                        @*<div class="form-group row">
                                <label class="col-form-label col-lg-3">@Html.DisplayNameFor(model => model.Code)</label>
                                <div class="col-lg-6">
                                    @Html.TextBoxFor(model => model.Code, new { @readonly = "readonly" , @class = "form-control", @placeholder = "Auto Generated Code" })
                                    @Html.ValidationMessageFor(model => model.Code)
                                </div>
                            </div>*@
                        <div class="form-group row">
                            <label class="col-form-label col-lg-3">@Html.DisplayName("Project")</label>
                            <div class="col-lg-6">
                                @Html.DropDownList("Project",new SelectList(Model.companyProjectList, "Id", "Name"), "Select Project",new { @class = "form-control",@onchange="projectChangeFunc(this)" })
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="col-form-label col-lg-3">@Html.DisplayNameFor(model => model.TicketId)</label>
                            <div class="col-lg-6">
                                @Html.DropDownListFor(model => model.TicketId,new SelectList(Enumerable.Empty<SelectListItem>()), "Choose---", new { @class = "form-control",@required="required" })
                                @Html.ValidationMessageFor(model => model.TicketId)
                            </div>
                        </div>

                        @*<div class="form-group row">
                                <label class="col-form-label col-lg-3">@Html.DisplayNameFor(model => model.Remarks)</label>
                                <div class="col-lg-6">
                                    @Html.TextBoxFor(model => model.Remarks, new { @class = "form-control", @placeholder = "Remarks" })
                                    @Html.ValidationMessageFor(model => model.Remarks)
                                </div>
                            </div>*@


                    </div>

                    <div class="col-md-6">
                        <div class="form-group row">
                            <label class="col-form-label col-lg-3">@Html.DisplayNameFor(model => model.UserId)</label>
                            <div class="col-lg-6">
                                @Html.DropDownListFor(model => model.UserId, new SelectList(Model.userList, "Id", "FullName"), "---Select---", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.UserId)
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-form-label col-lg-3">@Html.DisplayNameFor(model => model.Description)</label>
                            <div class="col-lg-6">
                                @Html.TextBoxFor(model => model.Description, new { @class = "form-control", @placeholder = "Description" })
                                @Html.ValidationMessageFor(model => model.Description)
                            </div>
                        </div>

                    </div>
                </div>


            </div>
            <div class="card-footer">
                <div class="d-flex justify-content-between">
                    <a href="@Url.Action("Index", "TicketAssign")" class="btn btn-danger btn-custom"><i class="fa fa-times-circle text-white"></i> Cancel</a>
                    <button type="submit" class="btn bg-teal btn-custom ml-3" id="productSubmit"><i class="fa fa-save"></i> Save</button>
                </div>
            </div>
        }
    </div>
    <!-- /basic layout -->

</div>
<!-- /content area -->

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap-file")
    @Scripts.Render("~/bundles/daterange-picker")
    @Scripts.Render("~/bundles/ajax-call")
    @Scripts.Render("~/bundles/property")

    <script>
       

        function projectChangeFunc(obj) {
            var projectId = $(obj).val();
            $("#TicketId").empty();
            $("#TicketId").append(new Option("Choose--", ""));
            if (projectId != '') {
               var url = '@Url.Action("GetTicketsByProjectId","TicketAssign")';
                var paramData = { projectId: projectId }
                ajaxCall(url, paramData, 'renderTicketsByProjectLoad');
            }
                

        }
        function renderTicketsByProjectLoad(data) {

            $(data).each(function () {
                $("#TicketId").append(new Option(this.Name, this.Id));
            });
           
        }
      
    </script>
}

