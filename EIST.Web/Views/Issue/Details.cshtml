@using EIST.Common
@using EIST.Web.Models
@model EIST.Web.Models.IssueModel

@{
    ViewBag.Title = "Details";
    int rowNo = 1;
    int authenticatedUserId = AuthenticatedUser.GetUserFromIdentity().UserId;
    bool IsUserRoleManager = new UserModel().CheckUserRole(authenticatedUserId, Enum.GetName(typeof(EnumUserRoleStatus), EnumUserRoleStatus.Manager));
    bool IsCustomerTypeUser = new UserModel().CheckCustomerTypeUser(authenticatedUserId);
    bool IsUserRoleDeveloper = new UserModel().CheckUserRole(authenticatedUserId, Enum.GetName(typeof(EnumUserRoleStatus), EnumUserRoleStatus.Developer));

    // Issue //
    var workflowItem = new WorkflowModel();
    var workflowList = new WorkflowModel().GetWorkflowsByRecordId(Model.Id, Enum.GetName(typeof(EnumWorkflowFormStatus), EnumWorkflowFormStatus.Issue)).ToList();
    if (workflowList.Any())
    {
        foreach (var item in workflowList)
        {
            workflowItem.Approver = item.Approver;
            workflowItem.ApprovalStatus = item.ApprovalStatus;
            workflowItem.Remarks = item.Remarks;
        }
    }
    else
    {
        workflowItem = null;
    }
    // Ticket Assign //
    var ticketAssignWorkflowItem = new WorkflowModel();
    var ticketAssignWorkflowList = new WorkflowModel().GetWorkflowsByRecordId(Model.Id, Enum.GetName(typeof(EnumWorkflowFormStatus), EnumWorkflowFormStatus.TicketAssign)).ToList();
    if (ticketAssignWorkflowList.Any())
    {
        foreach (var item in ticketAssignWorkflowList)
        {
            ticketAssignWorkflowItem.Approver = item.Approver;
            ticketAssignWorkflowItem.ApprovalStatus = item.ApprovalStatus;
            ticketAssignWorkflowItem.Remarks = item.Remarks;
        }
    }
    else
    {
        ticketAssignWorkflowItem = null;
    }
}

<!-- Content area -->
<div class="content">

    <!-- Basic layout-->
    <div class="card border-teal">
        <div class="card-header bg-teal header-elements-inline">
            <h5 class="card-title"><strong>Issue</strong></h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a href="@Url.Action("Index","Issue")" title="Back" class="list-icons-item"><i class="icon-arrow-left52"></i></a>
                </div>
            </div>
        </div>
        <hr class="hr-mar-reduce" />
        <div class="card-body">
            <div class="row">
                <div class="col-md-7">
                    <div class="form-group row cust-details-row">
                        <label class="col-md-3">@Html.DisplayNameFor(model => model.IssueTitle)</label>
                        <div class="col-md-7">
                            @Html.DisplayFor(model => model.IssueTitle)
                        </div>
                    </div>

                    @if (!string.IsNullOrEmpty(Model.Description))
                    {
                        <div class="form-group row cust-details-row">
                            <label class="col-md-3">@Html.DisplayNameFor(model => model.Description)</label>
                            <div class="col-md-7">
                                @Html.Raw(Model.Description)
                            </div>
                        </div>
                    }
                    <table class="table table-bordered table-striped table-condensed">
                        <thead>
                            <tr>
                                <th colspan="2" style="font-size:17px;">Attachment</th>
                            </tr>
                            <tr>
                                <th>#SL</th>
                                <th>@Html.DisplayName("File")</th>
                            </tr>
                        </thead>
                        <tbody id="attachmentFileTBody">
                            @if (Model.AttachmentFileCollection.Any())
                            {
                                foreach (var item in Model.AttachmentFileCollection)
                                {
                                    <tr>
                                        <td class="serial">
                                            @(rowNo++)
                                        </td>
                                        <td>
                                            <a class="title" target="_blank" href='@Url.Content(String.Format("~{0}", item.FileLocation))'>
                                                <img height="25" src="@Url.Content(String.Format("~{0}", FileExtension.GetFileExtensionThumbnail(item.FileExtension)))" />  @item.OriginalName
                                            </a>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td class="serial">@(rowNo++)</td>
                                    <td colspan="3" class="text-muted">No files found</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="col-md-5">
                    <div class="form-group row cust-details-row">
                        <label class="col-md-3">@Html.DisplayNameFor(model => model.Code)</label>
                        <div class="col-md-7">
                            @Html.DisplayFor(model => model.Code)
                        </div>
                    </div>
                    <div class="form-group row cust-details-row">
                        <label class="col-md-3">@Html.DisplayNameFor(model => model.ProjectId)</label>
                        <div class="col-md-7">
                            @Html.DisplayFor(model => model.Project.Name)
                        </div>
                    </div>

                    <div class="form-group row cust-details-row">
                        <label class="col-md-3">@Html.DisplayNameFor(model => model.LabelId)</label>
                        <div class="col-md-7">
                            @Html.DisplayFor(model => model.IssueLabel.LabelTitle)
                        </div>
                    </div>

                    <div class="form-group row cust-details-row">
                        <label class="col-md-3">@Html.DisplayNameFor(model => model.Milestone)</label>
                        <div class="col-md-7">
                            @Html.DisplayFor(model => model.Milestone)
                        </div>
                    </div>
                    <div class="form-group row cust-details-row">
                        <label class="col-md-3">@Html.DisplayNameFor(model => model.Priority)</label>
                        <div class="col-md-7">
                            @(Model.Priority ? "Yes" : "No")
                        </div>
                    </div>
                    <div class="form-group row cust-details-row">
                        <label class="col-md-3">@Html.DisplayName("Issue Status")</label>
                        <div class="col-md-7">
                            <label class="badge badge-info">@Enum.GetName(typeof(EnumIssueStatus), Model.Status).Replace("_"," ")</label>
                        </div>
                    </div>
                    @if (IsUserRoleManager && (Model.Status == (byte)EnumIssueStatus.Pending || Model.Status == (byte)EnumIssueStatus.Withheld))
                    {
                        <div class="card">
                            <div class="custom-header header-elements-inline">
                                <h5 class="">Issue Approval</h5>
                            </div>
                            <div class="card-body">
                                @using (Html.BeginForm("Approve", null, FormMethod.Post, new { @class = "approvalForm" }))
                                {
                                    @Html.Hidden("RecordId", Model.Id)
                                    @Html.Hidden("ApprovalId", authenticatedUserId)
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group row cust-details-row">
                                                <label class="col-md-3">@Html.DisplayName("Remarks")</label>
                                                <div class="col-md-9">
                                                    @Html.TextArea("ApprovalRemarks", workflowItem != null ? workflowItem.Remarks : "", new { @class = "form-control", @required = "required" })
                                                </div>
                                            </div>
                                            <div class="pull-right" style="float: right;">
                                                <button type="submit" formaction="@Url.Action("Disapprove", "Issue")" class="btn btn-sm btn-danger pull-right">Rejected</button>
                                                <button type="submit" formaction="@Url.Action("Withhold", "Issue")" class="btn btn-sm btn-warning pull-right">Withheld</button>
                                                <button type="submit" class="btn btn-sm btn-success pull-right">Accepted</button>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="card">
                            <div class="custom-header header-elements-inline">
                                <h5 class="">Issue Approval</h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group row cust-details-row">
                                            <label class="col-md-3">@Html.DisplayName("Remarks")</label>
                                            <div class="col-md-9">
                                                @(workflowItem != null ? workflowItem.Remarks : "")
                                            </div>
                                        </div>
                                        <div class="form-group row cust-details-row">
                                            <label class="col-md-3">@Html.DisplayName("Approved By")</label>
                                            <div class="col-md-9">
                                                @(workflowItem != null ? workflowItem.Approver.FullName : "")
                                            </div>
                                        </div>
                                        <div class="form-group row cust-details-row">
                                            <label class="col-md-3">@Html.DisplayName("Approved Status")</label>
                                            <div class="col-md-9">
                                                @(workflowItem != null ? workflowItem.ApprovalStatus : "") - @(workflowItem != null ? string.Format("{0:dd-MMM-yyyy hh:mm tt}", workflowItem.UpdatedAt) : "")
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    @if (!IsCustomerTypeUser)
                    {
                        if (IsUserRoleManager && Model.Status == (byte)EnumIssueStatus.Accepted && !Model.TicketAssignCollection.Any())
                        {
                            using (Html.BeginForm("TicketAssign", null, FormMethod.Post, new { @class = "ticketAssignForm" }))
                            {
                                @Html.Hidden("IssueId", Model.Id)
                                @Html.Hidden("ApprovalId", authenticatedUserId)
                                <div class="form-group row cust-details-row">
                                    <label class="col-lg-3">@Html.DisplayName("Assignee")</label>
                                    <div class="col-lg-9">
                                        @Html.DropDownList("SelectedId", new SelectList(Model.UserList, "Id", "UserName"), new { @class = "form-control input-sm select2", @multiple = "multiple", @required = "required" })
                                        @Html.ValidationMessageFor(model => model.TicketAssignSelectedModel.SelectedId)
                                    </div>
                                </div>
                                <div class="form-group row cust-details-row">
                                    <label class="col-lg-3">@Html.DisplayName("Description")</label>
                                    <div class="col-lg-9">
                                        @Html.TextArea("TicketDescription", null, new { @class = "form-control", @placeholder = "Ticket Description" })
                                        @Html.ValidationMessageFor(model => model.TicketAssignSelectedModel.TicketDescription)
                                    </div>
                                </div>
                                <div class="pull-right" style="float: right;">
                                    <button type="submit" class="btn btn-sm btn-success pull-right">Save</button>
                                </div>
                            }
                        }
                        else
                        {
                            if (Model.TicketAssignCollection.Any())
                            {
                                int num = 1;
                                <div class="form-group row cust-details-row">
                                    <label class="col-lg-3">@Html.DisplayName("Developer")</label>
                                    <div class="col-md-9">
                                        @foreach (var item in Model.TicketAssignCollection)
                                        {
                                            <span>@num.&nbsp; @Html.DisplayFor(model => item.Assignee.UserName)</span>
                                            num++;
                                        }
                                    </div>
                                </div>

                                <div class="form-group row cust-details-row">
                                    <label class="col-lg-3">@Html.DisplayName("Description")</label>
                                    <div class="col-md-9">
                                        @Html.DisplayFor(model => model.TicketAssignCollection.FirstOrDefault().Description)
                                    </div>
                                </div>
                                <div class="form-group row cust-details-row">
                                    <label class="col-lg-3">@Html.DisplayName("Ticket Status")</label>
                                    <div class="col-md-9">
                                        <label class="badge badge-info">@Enum.GetName(typeof(EnumTicketAssignStatus), Model.TicketAssignCollection.FirstOrDefault().Status).Replace("_", " ")</label>
                                    </div>
                                </div>
                                @*<div class="form-group row cust-details-row">
                                    <label class="col-md-3">@Html.DisplayName("Developer Status")</label>
                                    <div class="col-md-9">
                                        @(ticketAssignWorkflowItem != null ? ticketAssignWorkflowItem.Approver.UserName : ""), @(ticketAssignWorkflowItem != null ? ticketAssignWorkflowItem.ApprovalStatus.Replace("_", " ") : "") - @(workflowItem != null ? string.Format("{0:dd-MMM-yyyy hh:mm tt}", workflowItem.UpdatedAt) : "")
                                    </div>
                                </div>*@
                            }
                        }
                        if (IsUserRoleDeveloper && Model.TicketAssignCollection.Any() && (Model.TicketAssignCollection.FirstOrDefault().Status == (byte)EnumTicketAssignStatus.Pending || Model.TicketAssignCollection.FirstOrDefault().Status == (byte)EnumTicketAssignStatus.Rejected || Model.TicketAssignCollection.FirstOrDefault().Status != (byte)EnumTicketAssignStatus.Completed))
                        {
                            foreach (var item in Model.TicketAssignCollection)
                            {
                                if (item.AssigneeId == authenticatedUserId)
                                {
                                    using (Html.BeginForm("ApproveTicket", null, FormMethod.Post, new { @class = "approvalForm" }))
                                    {
                                        @Html.Hidden("RecordId", Model.Id)
                                        @Html.Hidden("ApprovalId", authenticatedUserId)
                                        <div class="form-group row cust-details-row">
                                            <label class="col-md-3">@Html.DisplayName("Remarks")</label>
                                            <div class="col-md-9">
                                                @Html.TextArea("ApprovalRemarks", ticketAssignWorkflowItem != null ? ticketAssignWorkflowItem.Remarks : "", new { @class = "form-control", @required = "required" })
                                            </div>
                                        </div>
                                        <div class="pull-right" style="float: right;">
                                            @if (Model.TicketAssignCollection.FirstOrDefault().Status == (byte)EnumTicketAssignStatus.Started)
                                            {
                                                <button type="submit" formaction="@Url.Action("CompleteTicket", "Issue")" class="btn btn-sm btn-success pull-right">Completed</button>
                                            }
                                            else
                                            {
                                                @*<button type="submit" formaction="@Url.Action("DisapproveTicket", "Issue")" class="btn btn-sm btn-danger pull-right">Rejected</button>*@
                                                <button type="submit" formaction="@Url.Action("DelegateTicket", "Issue")" class="btn btn-sm btn-warning pull-right">Delegated</button>
                                                <button type="submit" class="btn btn-sm btn-success pull-right">Started</button>
                                            }
                                        </div>
                                    }
                                }
                            }
                        }
                        else if (ticketAssignWorkflowItem != null)
                        {
                            <div class="form-group row cust-details-row">
                                <label class="col-md-3">@Html.DisplayName("Developer Remarks")</label>
                                <div class="col-md-9">
                                    @(ticketAssignWorkflowItem != null ? ticketAssignWorkflowItem.Remarks : "")
                                </div>
                            </div>
                            <div class="form-group row cust-details-row">
                                <label class="col-md-3">@Html.DisplayName("Developer Status")</label>
                                <div class="col-md-9">
                                    @(ticketAssignWorkflowItem != null ? ticketAssignWorkflowItem.Approver.UserName : ""), @(ticketAssignWorkflowItem != null ? ticketAssignWorkflowItem.ApprovalStatus.Replace("_", " ") : "") - @(workflowItem != null ? string.Format("{0:dd-MMM-yyyy hh:mm tt}", workflowItem.UpdatedAt) : "")
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<!-- /content area -->

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/ckeditor")
    <script src="~/Scripts/select2.min.js"></script>

    <script type="text/javascript">
        $(".select2").select2();
    </script>

}
